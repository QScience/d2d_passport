<?php
/**
 * @file
 */

variable_set('D2D_PASSPORT_NOTIFY', TRUE);

/**
 * Implements hook_d2d_secure_rpc().
 */
function d2d_passport_d2d_secure_rpc() {

  $methods = array();
  $methods['d2d_passport_get_users_number'] = array(
    'arguments' => array(),
    'callback' => '_d2d_passport_get_users_number',
    'description' => 'Returns the number of users in this website.',
  );
  $methods['d2d_passport_get_site_information'] = array(
    'arguments' => array(),
    'callback' => '_d2d_passport_get_site_information',
    'description' => 'Returns the title and the slogan of this website.',
  );
  $methods['d2d_passport_get_nodes_number'] = array(
    'arguments' => array(),
    'callback' => '_d2d_passport_get_nodes_number',
    'description' => 'Returns the number of nodes created so far in this website.',
  );
  $methods['d2d_passport_get_tags'] = array(
    'arguments' => array(),
    'callback' => '_d2d_passport_get_tags',
    'description' => 'Returns the D2D tags inserted in the configuration page.',
  );
  return $methods;
}

/**
 */
function _d2d_passport_get_users_number($arguments, $rpc_info) {
  $error_string = NULL;
  $users_number = NULL;

  $query = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->condition('status', 1, '=')
    ->execute();

  $users_number = $query->rowCount();

  return d2d_implode(array('return' => $users_number, 'error' => $error_string));

}

/**
 */
function _d2d_passport_get_site_information($arguments, $rpc_info) {
  $error_string = NULL;
  $return = array();

  $return['name'] = variable_get('site_name', '');
  $return['slogan'] = variable_get('site_slogan', '');

  $return = d2d_implode($return);
  return d2d_implode(array('return' => $return, 'error' => $error_string));
}

/**
 */
function _d2d_passport_get_nodes_number($arguments, $rpc_info) {
  $error_string = NULL;
  $nodes_number = NULL;

  $query = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('status', 1, '=')
    ->execute();

  $nodes_number = $query->rowCount();

  return d2d_implode(array('return' => $nodes_number, 'error' => $error_string));

}

/**
 */
function _d2d_passport_get_tags($arguments, $rpc_info) {
  $error_string = NULL;
  $return = variable_get('d2d_passport_instance_tags', '');
  return d2d_implode(array('return' => $return, 'error' => $error_string));
}

/**
 * d2d_passport_configure_form
 */
function d2d_passport_configure_form($form, &$form_state) {
  $form = array();
  $form['tags'] = array(
    '#type' => 'fieldset',
    '#title' => 'D2D Tags',
    '#description' => t('Insert here a few keywords that properly identify your site. These keywords will be used to index your instance on the D2D server'),
  );
  $form['tags']['text'] = array(
    '#type' => 'textfield',
    // '#title' => 'tags',
    '#description' => 'Separate multiple tags with a comma.',
    '#default_value' => variable_get('d2d_passport_instance_tags', ""),
    '#size' => 50,
  );
  $form['tags']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

function d2d_passport_configure_form_submit(&$form, &$form_state) {
  if (empty($form_state['values']['text'])) {
    drupal_set_message("Please enter some words.", "error");
    return;
  }
  variable_set('d2d_passport_instance_tags', $form_state['values']['text']);
  drupal_set_message("Tags Save Successfully. D2D Server will fetch them later.");
}

/**
 * save the d2d_sever
 */
function d2d_passport_define_server_form($form, &$form_state) {
  $server = variable_get('D2D_PASSPORT_SERVER_URL', FALSE);
  $serverid = variable_get('D2D_PASSPORT_SERVER_ID', FALSE);
  $serverd2did = variable_get('D2D_PASSPORT_SERVER_D2DID', FALSE);
  $form = array();
  $form['define_d2d_server'] = array(
    '#type' => 'fieldset',
    '#title' => 'Define D2D Server',
  );

  $friends = d2d_api_friend_get();
  if ($server !== FALSE) {
    $form['define_d2d_server']['selectedserver'] = array(
      '#prefix' => "<strong>Selected Server:  " . l($serverd2did, "admin/d2d/instances/$serverid/details") . "<br></strong>",
      '#markup' => t("If you want to reset, ") . l(t('Click here'), 'admin/d2d/passport/resetserver'),
      '#suffix' => '.',
    );
    return $form;
  } 

  if ($friends === FALSE) {
    $form['define_d2d_server']['noavaild2d'] = array(
      '#prefix' => "No friend instances for now.<br>Check if you can add ",
      '#markup' => l(t('some friends'), 'admin/d2d'),
      '#suffix' => '.',
    );
    return $form;
  }
  //dsm($friends);

  $header = array(
    'd2did' => t('D2D ID'),
    'title' => t('TITLE'),
    'description' => t('DESCRIPTION'),
    'time_inserted' => t('FRIENDSHIP CREATED'),
  );

  $options = array();
  foreach ($friends as $key => $friend) {
    $createdtime = date('j-m-Y H:i:s (P)', $friend['time_inserted']);
    $options[$key]= array(
      'd2did' => $key,
      'title' => $friend['name'],
      'description' => $friend['description'],
      'time_inserted' => $createdtime,
    );
  }
  $form['define_d2d_server']['tablesl'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#multiple' => FALSE,
    '#js_select' => FALSE,
  );

  $form['define_d2d_server']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Select D2D Server'),
  );

  return $form;
}

function d2d_passport_define_server_form_submit(&$form, &$form_state) {
  
  //dsm($form_state);
  if (empty($form_state['values']['tablesl'])) {
    drupal_set_message("Please choose at least one.", 'error');
    return;
  }
  else {
    //dsm($form_state['values']['tablesl']);
    $instance = d2d_api_instance_get($form_state['values']['tablesl']);
    //dsm($instance);
    variable_set('D2D_PASSPORT_SERVER_URL', $instance['url']);
    variable_set('D2D_PASSPORT_SERVER_ID', $instance['id']);
    variable_set('D2D_PASSPORT_SERVER_D2DID', $instance['d2d_id']);
    drupal_set_message("Save D2D Server Successful.");
  }
}

/**
 * Implements hook_menu()
 */
function d2d_passport_menu() {
  $items['admin/d2d/passport'] = array(
    'title' => 'D2D Passport',
    'page callback' => 'd2d_passport_configure_page',
    'access arguments' => array('administer d2d'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 81,
  );
  $items['admin/d2d/passport/resetserver'] = array(
    'title' => 'reset d2d server',
    'page callback' => 'd2d_passport_reset_d2d_server',
    'access arguments' => array('administer d2d'),
  );
  return $items;
}

function d2d_passport_reset_d2d_server() {
  variable_del('D2D_PASSPORT_SERVER_URL'); 
  variable_del('D2D_PASSPORT_SERVER_D2DID'); 
  variable_del('D2D_PASSPORT_SERVER_ID'); 
  drupal_goto('admin/d2d/passport');
}


function d2d_passport_configure_page() {

  $form = drupal_get_form('d2d_passport_define_server_form');
  $page = drupal_render($form);

  $hks = module_invoke('d2d_passport', 'd2d_secure_rpc');
  $header = array(
    'method_name' => t('D2D Passport Method Name'),
    'method_description' => t('method_description'),
  );

  $rows = array();
  foreach ($hks as $key => $value) {
    $rows[$key][] = $key;
    $rows[$key][] = isset($value['description']) ? $value['description'] : '';
  }
  $check = l(t('Make sure that the permissions are correctly set.'), 'admin/d2d/g_and_p/permissions');
  //$rows[] = array('<div id="d2d-passport-check-permission">' . $check . "</div>", NULL);
  $rows[] = array('<strong>' . $check . "</strong>", NULL);

  $page .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('patterns-server-list-table'))));

  $form = drupal_get_form('d2d_passport_configure_form');
  $page .= drupal_render($form);

  return $page;
}

function d2d_passport_notify($my_instance, $instance, $type, $len) {
  dsm($my_instance);
  dsm($instance);
  dsm($type);
  dsm($len);

}
